\contentsline {section}{\numberline {1}任务描述}{2}{section.1}%
\contentsline {section}{\numberline {2}问题复述}{2}{section.2}%
\contentsline {subsection}{\numberline {2.1}手动实现SVM的SMO算法}{2}{subsection.2.1}%
\contentsline {subsection}{\numberline {2.2}使用sklearn库简洁实现软间隔SVM}{3}{subsection.2.2}%
\contentsline {subsubsection}{\numberline {2.2.1}使用sklearn库简洁实现软间隔SVM。首先实现以下4个示例性的SVM模型：}{3}{subsubsection.2.2.1}%
\contentsline {subsubsection}{\numberline {2.2.2}参数选择与参数分析}{3}{subsubsection.2.2.2}%
\contentsline {section}{\numberline {3}实验环境}{5}{section.3}%
\contentsline {section}{\numberline {4}实验过程}{6}{section.4}%
\contentsline {subsection}{\numberline {4.1}手动实现SMO算法}{6}{subsection.4.1}%
\contentsline {subsubsection}{\numberline {4.1.1}传统QP算法求解硬间隔SVM的对偶问题}{6}{subsubsection.4.1.1}%
\contentsline {subsubsection}{\numberline {4.1.2}手动实现SMO算法 求解SVM对偶问题}{7}{subsubsection.4.1.2}%
\contentsline {subsubsection}{\numberline {4.1.3}对测试数据进行预测}{8}{subsubsection.4.1.3}%
\contentsline {subsubsection}{\numberline {4.1.4}QP算法和SMO算法的对比}{10}{subsubsection.4.1.4}%
\contentsline {subsection}{\numberline {4.2}使用sklearn库简洁实现软间隔SVM}{10}{subsection.4.2}%
\contentsline {subsubsection}{\numberline {4.2.1}实现4个示范性的SVM模型}{10}{subsubsection.4.2.1}%
\contentsline {subsubsection}{\numberline {4.2.2}参数分析实验}{11}{subsubsection.4.2.2}%
\contentsline {subsubsection}{\numberline {4.2.3}对测试数据进行预测}{12}{subsubsection.4.2.3}%
\contentsline {section}{\numberline {5}实验总结}{14}{section.5}%
\contentsline {section}{附录}{15}{section.5}%
\contentsline {section}{\numberline {A}手动实现SVM的SMO算法: manual.ipynb}{15}{appendix.A}%
\contentsline {subsection}{\numberline {A.1}传统QP算法求解硬间隔SVM的对偶问题}{15}{subsection.A.1}%
\contentsline {subsection}{\numberline {A.2}手动实现SMO}{17}{subsection.A.2}%
\contentsline {section}{\numberline {B}使用sklearn库简洁实现软间隔SVM: sklearn.ipynb}{21}{appendix.B}%
